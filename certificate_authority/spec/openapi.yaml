openapi: '3.0.0'
info:
  title: Privacy aware log based PKI API
  version: '1'
  description: Just trying things out

servers:
- url: http://localhost:8080

paths:
  /register:
    post:
      summary: Applies register transaction for approval
      operationId: app.register_transaction
      requestBody:
        x-body-name: transaction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Application status
          content:
            'text/plain':
              schema:
                type: string
        '400':
          description: Bad request
          content:
            'text/plain':
              schema:
                type: string
  /status:
    post:
      summary: Gets registration request of specific transaction
      operationId: app.get_request
      requestBody:
        x-body-name: transaction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Registration requests from the database
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/RegistrationRequest'
        '400':
          description: Bad request
          content:
            'text/plain':
              schema:
                type: string
        '404':
          description: Resource not found
          content:
            'text/plain':
              schema:
                type: string
  /admin/requests:
    get:
      summary: Gets all registration requests from the database
      operationId: app.get_all_requests
      responses:
        '200':
          description: Registration requests from the database
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/RegistrationRequest'
  /admin/requests/pending:
    get:
      summary: Gets all pending requests from the database
      operationId: app.get_pending_requests
      responses:
        '200':
          description: Pending registration requests from the database
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/RegistrationRequest'
  /admin/approve:
    post:
      summary: Approve registration request and posts it to the blockchain
      operationId: app.approve_request
      requestBody:
        x-body-name: transaction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Approval status
          content:
            'text/plain':
              schema:
                type: string
        '400':
          description: Bad request
          content:
            'text/plain':
              schema:
                type: string
  /admin/reject:
    post:
      summary: Rejects registration request
      operationId: app.reject_request
      requestBody:
        x-body-name: transaction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Rejection status
          content:
            'text/plain':
              schema:
                type: string
        '400':
          description: Bad request
          content:
            'text/plain':
              schema:
                type: string
  /debug/get/{id}:
    get:
      summary: Gets a specific transaction from the smart contract
      operationId: app.get_transaction
      parameters:
      - name: id
        in: path
        required: true
        description: the transaction identifier
        schema:
          type: integer
      responses:
        '200':
          description: Fetched transaction from smart contract
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Resource not found
          content:
            'text/plain':
              schema:
                type: string

components:
  schemas:
    Transaction:
      type: object
      properties:
        identity:
          type: string
        public_key:
          type: string
        signatures:
          type: string
    RegistrationRequest:
      type: object
      properties:
        transaction:
          type: object
          $ref: '#/components/schemas/Transaction'
        status:
          type: string
        id:
          type: integer