openapi: '3.0.0'
info:
  title: Privacy aware log based PKI client
  version: '1'
  description: Just trying things out


servers:
- url: http://localhost:8090

paths:
  /new_key:
    post:
      summary: Generates new key and registers it to the CA 
      operationId: app.register
      responses:
        '204':
          description: New certificate successfully requested
  /update_key:
    post:
      summary: Updates key and registers it to the CA. By default, signature is encrypted using public key provided (hex encoded), or default verifier key
      operationId: app.update
      requestBody:
        description: Encryption key (PEM Public Key) for signature, otherwise uses default verifier key
        x-body-name: destination_key
        required: false
        content:
          'text/plain':
            schema:
              type: 
                string
      responses:
        '200':
          description: Transaction list representing the updated key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transactions'
  /revoke_key:
    post:
      summary: Requests CA to revoke registration transaction, includes requesting for challenge and answering it
      operationId: app.revoke
      responses:
        '204':
          description: Revokation successfully requested
  /verify:
    post:
      summary: Validates and verifies transactions and returns current public key
      operationId: app.verify
      requestBody:
        x-body-name: transactions
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transactions'
      responses:
        '200':
          description: Certificate status
          content:
            'text/plain':
              schema:
                type: boolean
  /get_transactions:
    get:
      summary: Gets transactions from generated keys
      operationId: app.get_transactions
      responses:
        '200':
          description: Transactions from generated keys
          content:
            'application/json':
              schema:
                type: object
                $ref: '#/components/schemas/Transactions'
  /register_status:
    get:
      summary: Gets status of register transaction sent to the certificate authority
      operationId: app.status
      responses:
        '200':
          description: Transaction status
          content:
            'text/plain':
              schema:
                type: string

  /debug/ca/status:
    post:
      summary: Gets registration request of specific transaction
      operationId: app.ca_status
      requestBody:
        x-body-name: transaction
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: Registration requests from the database
          content:
            'application/json':
              schema:
                type: array
                items:
                  type: object
                  $ref: '#/components/schemas/RegistrationRequest'
        '400':
          description: Bad request
          content:
            'text/plain':
              schema:
                type: string


components:
  schemas:
    Transaction:
      type: object
      properties:
        identity:
          type: string
        public_key:
          type: string
        signatures:
          type: string
    RegistrationRequest:
      type: object
      properties:
        transaction:
          type: object
          $ref: '#/components/schemas/Transaction'
        status:
          type: string
        id:
          type: integer
    Transactions:
      type: object
      additionalProperties:
        type: object
        $ref: '#/components/schemas/Transaction'